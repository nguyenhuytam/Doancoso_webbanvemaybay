@model PagedList.IPagedList<web_banvemaybay.Models.Binhluan>
@using PagedList.Mvc;
<link href="~/Content/css/Binhluan.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-dTq9t5pUc4L/Il2iXXx2AhNN07P5QPl3NmEs3TJ5ymCprYi/QT4P8ceGcv5Cd0zVK3C8E1GXvqzjo5A3uW9dkwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

@if (!string.IsNullOrEmpty(ViewBag.thongbao))
{
    <p>@ViewBag.thongbao</p>
}
<div style="margin: 90px auto 80px "></div>
<form action="@Url.Action("binhluan","Binhluan")" method="post">
    <div class="comment-container">
        @foreach (var item in Model)
        {
            <div class="comment">

                <div class="comment-author">@item.TaiKhoan.HovaTen</div>
                <div class="comment-date">@item.ngaybl</div>
                <div class="comment-text">@item.binhluan1</div>
                <div class="comment-rating">
                    @for (int i = 0; i < item.sosao; i++)
                    {
                        <i class="fas fa-star" style="color: #f5f545"></i>
                    }
                </div>

            </div>

        }
    <div class="Phanhoibl">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>


        <!-- More comments go here -->

    <div class="comment-form">
        @if (Session["IDtaikhoan"] != null)
        {
            <span>@Session["Hovaten"]</span>
<textarea class="custom-comment-input" placeholder="Viết bình luận tại đây" name="binhluanmoi"></textarea>
            <div class="rating" name="sosao">
                <i class="fas fa-star" data-rating="1"></i>
                <i class="fas fa-star" data-rating="2"></i>
                <i class="fas fa-star" data-rating="3"></i>
                <i class="fas fa-star" data-rating="4"></i>
                <i class="fas fa-star" data-rating="5"></i>
            </div>
            <input type="hidden" id="selectedRating" name="selectedRating" value="0" />
            <button>Bình luận</button>
        }
        else
        {
            Session["ReturnUrl"] = Request.Url.ToString();
            <a href="@Url.Action("Login", "Login")">Đăng nhập để bình luận</a>
        }
    </div>
    </div>
</form>

<script>
    const stars = document.querySelectorAll('.rating i');
    const selectedRatingInput = document.getElementById('selectedRating');

    stars.forEach(star => {
        star.addEventListener('mouseover', () => {
            const rating = parseInt(star.getAttribute('data-rating'));
            resetStars();
            highlightStars(rating);
        });

        star.addEventListener('click', () => {
            const rating = parseInt(star.getAttribute('data-rating'));
            resetStars();
            highlightStars(rating);

            // Lưu giá trị số sao vào input ẩn
            selectedRatingInput.value = rating;
            console.log('Selected Rating:', rating);
        });
    });

    function resetStars() {
        stars.forEach(star => {
            star.classList.remove('rated');
        });
    }

    function highlightStars(count) {
        for (let i = 0; i < count; i++) {
            stars[i].classList.add('rated');
        }
    }
</script>
<style>

        

    .Phanhoibl {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

        .Phanhoibl .pagination {
            display: flex;
            padding-left: 0;
            list-style: none;
        }

            .Phanhoibl .pagination > li {
                margin: 0 5px;
            }

                .Phanhoibl .pagination > li > a,
                .Phanhoibl .pagination > li > span {
                    position: relative;
                    float: left;
                    padding: 6px 12px;
                    line-height: 1.42857143;
                    text-decoration: none;
                    color: #337ab7;
                    background-color: #fff;
                    border: 1px solid #ddd;
                }

            .Phanhoibl .pagination > .active > a,
            .Phanhoibl .pagination > .active > span,
            .Phanhoibl .pagination > .active > a:hover,
            .Phanhoibl .pagination > .active > span:hover,
            .Phanhoibl .pagination > .active > a:focus,
            .Phanhoibl .pagination > .active > span:focus {
                z-index: 2;
                color: #fff;
                background-color: #337ab7;
                border-color: #337ab7;
                cursor: default;
            }

            .Phanhoibl .pagination > .disabled > span,
            .Phanhoibl .pagination > .disabled > a,
            .Phanhoibl .pagination > .disabled > a:hover,
            .Phanhoibl .pagination > .disabled > a:focus {
                color: #777;
                background-color: #fff;
                border-color: #ddd;
                cursor: not-allowed;
            }

</style>


